@using Microsoft.AspNetCore.Identity
@using DailySpin.DataProvider
@using Microsoft.AspNetCore.Http;
@using DailySpin.DataProvider.Data;

@inject UserManager<UserAccount> userManager;
@inject IHttpContextAccessor _context;

@inject SignInManager<UserAccount> SignInManager
@inject UserManager<UserAccount> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="" asp-action="#">Deposit</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="" asp-action="#">Withdraw</a>
    </li>
    var user =await userManager.GetUserAsync(_context.HttpContext!.User); // в контроллер
        <li class="nav-item">
        <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@user!.DisplayName</a>
    </li>
    <li class="balance-user">
            Balance: @user.Balance 💰
    </li>
    <img class="user-avatar" src="@string.Format("data:image/png;base64, {0}", Convert.ToBase64String(user.Image))"/>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>